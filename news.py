class BaseSpecialist:
    def __init__(self, openai_client=None):
        self.openai_client = openai_client

    async def _analyze_with_ai(self, prompt, news):
        try:
            if not self.openai_client:
                return "–û—à–∏–±–∫–∞: OpenAI –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
            
            full_prompt = f"{prompt}\n\n–ù–æ–≤–æ—Å—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:\n{news}"
            
            response = await self.openai_client.chat.completions.create(
                model="gpt-3.5-turbo",  # –∏–ª–∏ gpt-4, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
                messages=[
                    {"role": "system", "content": "–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫."},
                    {"role": "user", "content": full_prompt}
                ],
                temperature=0.7,
                max_tokens=500
            )
            
            return response.choices[0].message.content
            
        except Exception as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}"

class IndicesSpecialist(BaseSpecialist):
    async def analyze_news(self, news):
        prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç—å –¢–û–õ–¨–ö–û —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–æ–Ω–¥–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã (S&P 500, Dow Jones, Nasdaq, Russell –∏ —Ç.–¥.).
–ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∏–Ω–¥–µ–∫—Å—ã, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
‚úÖ –ü–æ–∫—É–ø–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∏–Ω–¥–µ–∫—Å–Ω—ã–µ ETF, –Ω–∞–ø—Ä–∏–º–µ—Ä SPY, QQQ, DIA, IWM)
‚ùå –ü—Ä–æ–¥–∞–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∏–Ω–¥–µ–∫—Å–Ω—ã–µ ETF)
üõ° –•–µ–¥–∂–∏—Ä–æ–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ - VIX, –æ–±—Ä–∞—Ç–Ω—ã–µ ETF)
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä—ã –∏–Ω–¥–µ–∫—Å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤."""
        return await self._analyze_with_ai(prompt, news)

class CommoditiesSpecialist(BaseSpecialist):
    async def analyze_news(self, news):
        prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç—å –¢–û–õ–¨–ö–û —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Å—ã—Ä—å–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã (–∑–æ–ª–æ—Ç–æ, —Å–µ—Ä–µ–±—Ä–æ, –Ω–µ—Ñ—Ç—å, –≥–∞–∑, –º–µ—Ç–∞–ª–ª—ã –∏ —Ç.–¥.).
–ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—ã—Ä—å–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
‚úÖ –ü–æ–∫—É–ø–∞—Ç—å: (—Ç–æ–ª—å–∫–æ —Å—ã—Ä—å–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ –∏—Ö ETF, –Ω–∞–ø—Ä–∏–º–µ—Ä GLD, SLV, USO, UNG)
‚ùå –ü—Ä–æ–¥–∞–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ —Å—ã—Ä—å–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ –∏—Ö ETF)
üõ° –•–µ–¥–∂–∏—Ä–æ–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏—è —Å—ã—Ä—å–µ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤)
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä—ã —Å—ã—Ä—å–µ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤."""
        return await self._analyze_with_ai(prompt, news)

class ForexSpecialist(BaseSpecialist):
    async def analyze_news(self, news):
        prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç—å –¢–û–õ–¨–ö–û —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã (EUR/USD, GBP/USD, USD/JPY, USD/CHF –∏ —Ç.–¥.).
–ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
‚úÖ –ü–æ–∫—É–ø–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã)
‚ùå –ü—Ä–æ–¥–∞–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã)
üõ° –•–µ–¥–∂–∏—Ä–æ–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤)
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä."""
        return await self._analyze_with_ai(prompt, news)

class StocksSpecialist(BaseSpecialist):
    async def analyze_news(self, news):
        prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç—å –¢–û–õ–¨–ö–û —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ —Å–µ–∫—Ç–æ—Ä—ã —Ñ–æ–Ω–¥–æ–≤–æ–≥–æ —Ä—ã–Ω–∫–∞.
–ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏–ª–∏ —Å–µ–∫—Ç–æ—Ä—ã, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
‚úÖ –ü–æ–∫—É–ø–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∞–∫—Ü–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –∏–ª–∏ —Å–µ–∫—Ç–æ—Ä–∞–ª—å–Ω—ã–µ ETF, –Ω–∞–ø—Ä–∏–º–µ—Ä XLK, XLF)
‚ùå –ü—Ä–æ–¥–∞–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∞–∫—Ü–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –∏–ª–∏ —Å–µ–∫—Ç–æ—Ä–∞–ª—å–Ω—ã–µ ETF)
üõ° –•–µ–¥–∂–∏—Ä–æ–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ü–∏–π)
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä—ã –∞–∫—Ü–∏–π –∏ —Å–µ–∫—Ç–æ—Ä–∞–ª—å–Ω—ã—Ö ETF."""
        return await self._analyze_with_ai(prompt, news)

class CryptoSpecialist(BaseSpecialist):
    async def analyze_news(self, news):
        prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç—å –¢–û–õ–¨–ö–û —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã (Bitcoin, Ethereum, –∞–ª—å—Ç–∫–æ–∏–Ω—ã –∏ —Ç.–¥.).
–ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
‚úÖ –ü–æ–∫—É–ø–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏ –∫—Ä–∏–ø—Ç–æ-ETF, –Ω–∞–ø—Ä–∏–º–µ—Ä BTC, ETH, GBTC, ETHE)
‚ùå –ü—Ä–æ–¥–∞–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏ –∫—Ä–∏–ø—Ç–æ-ETF)
üõ° –•–µ–¥–∂–∏—Ä–æ–≤–∞—Ç—å: (—Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç)
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤."""
        return await self._analyze_with_ai(prompt, news)

class NewsHandler:
    def __init__(self, openai_client=None):
        self.news_mode_chats = set()
        self.openai_client = openai_client
        self.indices_specialist = IndicesSpecialist(openai_client=openai_client)
        self.commodities_specialist = CommoditiesSpecialist(openai_client=openai_client)
        self.forex_specialist = ForexSpecialist(openai_client=openai_client)
        self.stocks_specialist = StocksSpecialist(openai_client=openai_client)
        self.crypto_specialist = CryptoSpecialist(openai_client=openai_client)

    def _generate_conclusion(self, indices, commodities, forex, stocks, crypto):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤—Å–µ—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤"""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        strategy_parts = []
        for analysis in [indices, commodities, forex, stocks, crypto]:
            if "–ü–æ–∫—É–ø–∞—Ç—å" in analysis:
                strategy_parts.append(analysis.split("–ü–æ–∫—É–ø–∞—Ç—å:")[1].split("\n")[0].strip())
        
        # –°–æ–±–∏—Ä–∞–µ–º —Ä–∏—Å–∫–∏
        risks = []
        for analysis in [indices, commodities, forex, stocks, crypto]:
            if "–ü—Ä–æ–¥–∞–≤–∞—Ç—å" in analysis:
                risks.append(analysis.split("–ü—Ä–æ–¥–∞–≤–∞—Ç—å:")[1].split("\n")[0].strip())
        
        # –°–æ–±–∏—Ä–∞–µ–º –º–µ—Ä—ã —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏—è
        hedging = []
        for analysis in [indices, commodities, forex, stocks, crypto]:
            if "–•–µ–¥–∂–∏—Ä–æ–≤–∞—Ç—å" in analysis:
                hedging.append(analysis.split("–•–µ–¥–∂–∏—Ä–æ–≤–∞—Ç—å:")[1].split("\n")[0].strip())

        conclusion_parts = []
        if strategy_parts:
            conclusion_parts.append(f"–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: {', '.join(strategy_parts)}.")
        if risks:
            conclusion_parts.append(f"–†–∏—Å–∫–∏: {', '.join(risks)}.")
        if hedging:
            conclusion_parts.append(f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä—ã: {', '.join(hedging)}.")

        conclusion = "üìå –í—ã–≤–æ–¥:\n" + "\n".join(conclusion_parts) + "\n\nüöÄ –ñ–¥–µ–º —Å–ª–µ–¥—É—é—â—É—é –Ω–æ–≤–æ—Å—Ç—å!"
        return conclusion

    async def handle_message(self, update, context):
        try:
            chat_id = update.effective_chat.id
            if chat_id not in self.news_mode_chats:
                print(f"–ß–∞—Ç {chat_id} –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –Ω–æ–≤–æ—Å—Ç–µ–π")  # –û—Ç–ª–∞–¥–∫–∞
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ –∏–ª–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            news_text = None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
            is_forwarded = hasattr(update.message, 'forward_from') or hasattr(update.message, 'forward_from_chat')
            
            # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f"–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: {'–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ' if is_forwarded else '–û–±—ã—á–Ω–æ–µ'}")
            print(f"–¢–µ–∫—Å—Ç: {update.message.text}")
            print(f"–ü–æ–¥–ø–∏—Å—å: {update.message.caption}")
            
            if is_forwarded:
                print("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")  # –û—Ç–ª–∞–¥–∫–∞
                if update.message.text:
                    news_text = update.message.text
                    print(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
                elif update.message.caption:
                    news_text = update.message.caption
                    print(f"–ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–¥–ø–∏—Å—å: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
                elif update.message.photo:
                    news_text = update.message.caption
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
                elif update.message.video:
                    news_text = update.message.caption
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
                elif update.message.document:
                    news_text = update.message.caption
                    print(f"–ü–æ–ª—É—á–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–¥–ø–∏—Å—å—é: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
            else:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
                if update.message.text:
                    news_text = update.message.text
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
                elif update.message.photo:
                    news_text = update.message.caption
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
                elif update.message.video:
                    news_text = update.message.caption
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞
                elif update.message.document:
                    news_text = update.message.caption
                    print(f"–ü–æ–ª—É—á–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–¥–ø–∏—Å—å—é: {news_text}")  # –û—Ç–ª–∞–¥–∫–∞

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –ø—É—Å—Ç–æ–π
            if not news_text:
                await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥–ø–∏—Å—å –∫ –º–µ–¥–∏–∞.")
                return

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∞–Ω–∞–ª–∏–∑–∞
            status_message = await update.message.reply_text("üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç—å...")

            # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏–∑ –æ—Ç –∫–∞–∂–¥–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
            try:
                indices = await self.indices_specialist.analyze_news(news_text)
                commodities = await self.commodities_specialist.analyze_news(news_text)
                forex = await self.forex_specialist.analyze_news(news_text)
                stocks = await self.stocks_specialist.analyze_news(news_text)
                crypto = await self.crypto_specialist.analyze_news(news_text)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}")  # –û—Ç–ª–∞–¥–∫–∞
                await status_message.edit_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}")
                return

            # –§–æ—Ä–º–∏—Ä—É–µ–º –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            report = (
                "üìä –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –æ—Ç –Ω–∞—à–∏—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤\n\n"
                f"üìà Indices Specialist (–ò–Ω–¥–µ–∫—Å—ã)\n{indices}\n\n"
                f"üõ¢Ô∏è Commodities Specialist (–°—ã—Ä—å–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã)\n{commodities}\n\n"
                f"üí± Forex Specialist (–í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã)\n{forex}\n\n"
                f"üè¢ Stocks Specialist (–ê–∫—Ü–∏–∏)\n{stocks}\n\n"
                f"ü™ô Crypto Specialist (–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã)\n{crypto}\n\n"
                f"{self._generate_conclusion(indices, commodities, forex, stocks, crypto)}"
            )

            await status_message.delete()
            await update.message.reply_text(report)
            
        except Exception as e:
            print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞: {str(e)}")  # –û—Ç–ª–∞–¥–∫–∞
            await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

    def start_news_mode(self, chat_id):
        """–í–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞"""
        self.news_mode_chats.add(chat_id)
        print(f"–†–µ–∂–∏–º –Ω–æ–≤–æ—Å—Ç–µ–π –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è —á–∞—Ç–∞ {chat_id}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
